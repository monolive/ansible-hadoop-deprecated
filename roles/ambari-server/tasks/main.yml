--- 
 - name : install ambari-server
   yum : name=ambari-server state=present

 - name : Create Folder
   file : dest=/root/ambari-install state=directory mode=0755

 - name : Copy configs.sh
   copy : src=configs.sh dest=/root/ambari-install/configs.sh mode=0755

 - name : configure ambari-server
   shell : creates=/root/ambari-install/ansible.done ambari-server setup -j /usr/java/default -s > /tmp/output

 - name : check if ambari-server is installed
   wait_for : path=/tmp/output search_regex="completed successfully"

# - name : modify repo def
#   template : src=repoinfo.xml.2.1.j2 dest=/var/lib/ambari-server/resources/stacks/HDP/2.1/repos/repoinfo.xml mode=0644
#   when : repository.local_repo

 - name : start ambari server
   service : name=ambari-server state=restarted

 - name : check if ambari-server is up
   wait_for : host={{ hostvars[groups['ambari_server'][0]]['ansible_fqdn'] }} port=8080 delay=10

 - name : modify repo script
   template : src=modify-repo.sh.j2 dest=/root/ambari-install/modify-repo.sh mode=0755
   when : repository.local_repo

 - name : Run Modify repository
   command : /root/ambari-install/modify-repo.sh
   when : repository.local_repo

# - name : start ambari server for local repo
#   service : name=ambari-server state=restarted
#   when : repository.local_repo

# - name : check if ambari-server is up for local repo
#   wait_for : host={{ hostvars[groups['ambari_server'][0]]['ansible_fqdn'] }} port=8080 delay=10
#   when : repository.local_repo

